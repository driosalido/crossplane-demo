apiVersion: database.example.org/v1alpha1
kind: PostgreSQLInstance
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"database.example.org/v1alpha1","kind":"PostgreSQLInstance","metadata":{"annotations":{},"labels":{"argocd.argoproj.io/instance":"example-app"},"name":"my-postgres","namespace":"default"},"spec":{"compositionSelector":{"matchLabels":{"provider":"aws"}},"parameters":{"storageGB":20},"writeConnectionSecretToRef":{"name":"db-conn"}}}
  creationTimestamp: "2022-05-24T14:15:08Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 3
  labels:
    argocd.argoproj.io/instance: example-app
  name: my-postgres
  namespace: default
  resourceVersion: "11624"
  uid: 40144eea-0000-47d5-8eef-631780350fbd
spec:
  compositionRef:
    name: xpostgresqlinstances.aws.database.example.org
  compositionSelector:
    matchLabels:
      provider: aws
  compositionUpdatePolicy: Automatic
  parameters:
    storageGB: 20
  resourceRef:
    apiVersion: database.example.org/v1alpha1
    kind: XPostgreSQLInstance
    name: my-postgres-5t65l
  writeConnectionSecretToRef:
    name: db-conn
status:
  conditions:
  - lastTransitionTime: "2022-05-24T14:15:08Z"
    reason: Composite resource claim is waiting for composite resource to become Ready
    status: "False"
    type: Ready
